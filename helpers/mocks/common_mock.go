// Code generated by MockGen. DO NOT EDIT.
// Source: common.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHelper is a mock of Helper interface.
type MockHelper struct {
	ctrl     *gomock.Controller
	recorder *MockHelperMockRecorder
}

// MockHelperMockRecorder is the mock recorder for MockHelper.
type MockHelperMockRecorder struct {
	mock *MockHelper
}

// NewMockHelper creates a new mock instance.
func NewMockHelper(ctrl *gomock.Controller) *MockHelper {
	mock := &MockHelper{ctrl: ctrl}
	mock.recorder = &MockHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelper) EXPECT() *MockHelperMockRecorder {
	return m.recorder
}

// GetDataFromRequest mocks base method.
func (m *MockHelper) GetDataFromRequest(r *http.Request, contextId string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataFromRequest", r, contextId)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataFromRequest indicates an expected call of GetDataFromRequest.
func (mr *MockHelperMockRecorder) GetDataFromRequest(r, contextId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataFromRequest", reflect.TypeOf((*MockHelper)(nil).GetDataFromRequest), r, contextId)
}
